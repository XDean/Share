Genetic Algorithm
Introduction and Samples
1 Jul 2019

Dean Xu
ASML Brion
dean.xu@asml.com
github.com/XDean

.theme asml
.agenda

* Methodology

* Optimize Problem

.image images/optimize-function.png

* Natural Selection

.image images/ns-bird.jpg 250 250

.image images/ns-wing.jpg 250 180

* GA Flow

.image images/ga.gif 500 730

* GA Flow

.image images/ga-flow.png 470 850

* GA Flow

.image images/ga.png 550 220

* GA Selection

.image images/ga-selection.jpg 400 850

* GA Crossover

.image images/ga-crossover.png 485 850

* GA Mutation

.image images/ga-mutation.png 485 850

* N Queens Puzzle

* Puzzle

Placing N chess queens on an N×N chessboard so that no two queens threaten each other

.image queen/nqueens.gif 400 400

* Classic Solution

*Backtracking*: $O(k^N) ~ O(N^N)$

.image queen/Eight-queens-animation.gif 400 400

* GA Solution

1. *Encode*
Use a N length array to present a candidate. Each position's value means queen's row in each column. Obviously, the array has no identical numbers. So each candidate is a permutations of N. Like:

    [5, 3, 1, 7, 2, 8, 6, 4]

2. *Fitness*
For each candidate, the fitness is the amount of not-conflicted pairs of queens. For example,

    [2, 1, 4, 3]
    +o++
    o+++
    +++o
    ++o+

It has fitness 2.

* GA Solution

3. *Crossover*

We can't use simple crossover because it will lead ordinary error.

      [1, 2, 3, 4, | 5, 6, 7, 8]
    + [5, 6, 7, 8, | 1, 2, 3, 4]
    ---------------|------------
    = [5, 6, 7, 8, | 5, 6, 7, 8]

Here we crossover by common subset

      [1, 2, 3, 4, 6, 5, 8, 7]
    + [2, 3, 4, 1, 8, 5, 7, 6]
    --------------------------
    = [2, 3, 4, 1, 6, 5, 8, 7]


* Travel Sale Problem

* GA + ANN

* GA + ANN

.link https://zhuanlan.zhihu.com/p/56319305 "如何丝滑地入门神经网络？写个AI赛车游戏，只训练4代就能安全驾驶_知乎"

* Summary

* Q&A

Q&A