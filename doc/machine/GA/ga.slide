Genetic Algorithm
Introduction and Samples
1 Jul 2019

Dean Xu
ASML Brion
dean.xu@asml.com
github.com/XDean

.theme asml
.agenda

* Methodology

* Optimize Problem

.image images/optimize-function.png

* Natural Selection

.image images/ns-bird.jpg 250 250

.image images/ns-wing.jpg 250 180

* GA Flow

.image images/ga.gif 500 730

* GA Flow

.image images/ga-flow.png 470 850

* GA Flow

.image images/ga.png 550 220

* GA Selection

.image images/ga-selection.jpg 400 850

* GA Crossover

.image images/ga-crossover.png 485 850

* GA Mutation

.image images/ga-mutation.png 485 850

* N Queens Puzzle

* Puzzle

Placing N chess queens on an N×N chessboard so that no two queens threaten each other

.image queen/nqueens.gif 400 400

* Classic Solution

*Backtracking*: $O(k^N) ~ O(N^N)$

.image queen/Eight-queens-animation.gif 400 400

* GA Solution

1. *Encode*
Use a N length array to present a candidate. Each position's value means queen's row in each column. Obviously, the array has no identical numbers. So each candidate is a permutations of N. Like:

    [5, 3, 1, 7, 2, 8, 6, 4]

2. *Fitness*
For each candidate, the fitness is the amount of not-conflicted pairs of queens. For example,

    [2, 1, 4, 3]
    +o++
    o+++
    +++o
    ++o+

It has fitness 2.

* GA Solution

3. *Crossover*

We can't use simple crossover because it will cause ordinary error.

    > [1, 2, 3, 4, | 5, 6, 7, 8]
    > [5, 6, 7, 8, | 1, 2, 3, 4]
    ---------------|------------
    = [5, 6, 7, 8, | 5, 6, 7, 8]

Here we crossover by common subset

    > [1, 2, 3, 4, 6, 5, 8, 7]
    > [2, 3, 4, 1, 8, 5, 7, 6]
    --------------------------
    = [2, 3, 4, 1, 6, 5, 8, 7]

* GA Solution

4. *Mutation*

We also can't use simple mutation. It will cause ordinary error.

    From [1, 2, 3, (4)]
    To   [1, 2, 3, (3)]

Here we mutation by exchange queens

    From [1, 2, (3), 4, 6, 5, (8), 7]
    To   [1, 2, (8), 4, 6, 5, (3), 7]

* GA Solution

*Other Configurations*

    genetic.Population{
        Size:            100,  // population size
        Dim:             N,    // gene size, N queens
        CrossoverFactor: 0.8,  // crossover probability
        VariantFactor:   0.2,  // mutation probability
        MaxGen:          5000, // max generation

        TargetFunc:    genetic.TargetScore(1), // target fitness is 1 (normalized)
        RandomFunc:    Random,                 // random generate individual
        CrossoverFunc: CrossoverRing,          // crossover by common subsets
        VariantFunc:   Variant,                // mutation by exchange
        ScoreFunc:     ScorePower(1),          // fitness
        SelectFunc:    genetic.ScoreOrderSelectTop(0.1, 0.9), // selection
    }.Random().Run() // random init and run

* GA Solution - 20 Queens

.image queen/0009.png 550 550

* GA Solution - 20 Queens

.image queen/queen.png 570 300

* Classic VS GA (Find 1 solution)

- Backtracking
  - 13  Queens 1.65s
  - 14  Queens 13.32s
  - 15  Queens 117.56s
- GA
  - 20  Queens avg < 15ms
  - 50  Queens avg < 100ms
  - 100 Queens avg < 500ms

* Travel Sale Problem

* Puzzle

Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?

.image tsp/TSP.png

* Classic Solution

*DP*: $O(n^2 \cdot 2^n)$

*Branch_and_Bound*: $O(2^n)$

.image tsp/tsp-branch-and-bound.gif

* GA Solution


1. *Encode*

Number all the vertexes (1~N). Each candidate is a permutations of N.



2. *Fitness*

Smaller distance is better, so we use countdown of distance as fitness

* GA Solution

3. *Crossover* & *Mutation*

A simple optimize way is to swap two path, like

    [1, 3, 2, 4]             [1, 2, 3, 4]
    1     2                  1-----2
    |\   /|                  |     |
    | \ / |                  |     |
    |  x  |        TO        |     |
    | / \ |                  |     |
    |/   \|                  |     |
    4     3                  4-----3

So we revert a substring to crossover and mutation.

* GA Solution - China 32 Cities

Average 200ms. Answer <160 (about 17500km)

.image tsp/tsp.gif 500 625

* GA + ANN

* GA + ANN

.link https://zhuanlan.zhihu.com/p/56319305 "如何丝滑地入门神经网络？写个AI赛车游戏，只训练4代就能安全驾驶_知乎"

* Summary

* Q&A

Q&A